name: 🚀 Deploy to Fly.io

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Test and lint
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: 📦 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🔧 Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: 🗄️ Setup test database
        run: |
          export DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db
          sqlx migrate run
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

      - name: 🎨 Check formatting
        run: cargo fmt -- --check

      - name: 📎 Run Clippy
        run: cargo clippy -- -D warnings

      - name: 🧪 Run tests
        run: cargo test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          JWT_SECRET: test-secret-key
          RUST_LOG: debug

      - name: 🔍 Check build
        run: cargo check --release

  # Deploy to Fly.io (only on main branch)
  deploy:
    name: 🚀 Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🪰 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy to Fly.io
        run: flyctl deploy --remote-only --app rust-base-api
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🏥 Health Check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://rust-base-api.fly.dev/health || exit 1
          echo "✅ Deployment successful and healthy!"

  # Security scan
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: 🔍 Install cargo-audit
        run: cargo install cargo-audit

      - name: 🛡️ Security audit
        run: cargo audit

      - name: 🔒 Dependency review
        uses: actions/dependency-review-action@v3
