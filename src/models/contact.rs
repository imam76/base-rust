use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};
use uuid::Uuid;

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Contact {
    pub id: Uuid,
    pub first_name: String,
    pub last_name: String,
    pub email: Option<String>,
    pub phone: Option<String>,
    pub mobile: Option<String>,
    pub company: Option<String>,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub postal_code: Option<String>,
    pub country: Option<String>,
    pub billing_address_line1: Option<String>,
    pub billing_address_line2: Option<String>,
    pub billing_city: Option<String>,
    pub billing_state: Option<String>,
    pub billing_postal_code: Option<String>,
    pub billing_country: Option<String>,
    pub delivery_address_line1: Option<String>,
    pub delivery_address_line2: Option<String>,
    pub delivery_city: Option<String>,
    pub delivery_state: Option<String>,
    pub delivery_postal_code: Option<String>,
    pub delivery_country: Option<String>,
    pub is_customer: bool,
    pub is_employee: bool,
    pub is_supplier: bool,
    pub is_active: bool,
    pub created_at: DateTime<Utc>,
    pub created_by: Uuid,
    pub updated_at: DateTime<Utc>,
    pub updated_by: Uuid,
}

#[derive(Debug, Deserialize)]
pub struct CreateContactRequest {
    pub first_name: String,
    pub last_name: String,
    pub email: Option<String>,
    pub phone: Option<String>,
    pub mobile: Option<String>,
    pub company: Option<String>,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub postal_code: Option<String>,
    pub country: Option<String>,
    pub billing_address_line1: Option<String>,
    pub billing_address_line2: Option<String>,
    pub billing_city: Option<String>,
    pub billing_state: Option<String>,
    pub billing_postal_code: Option<String>,
    pub billing_country: Option<String>,
    pub delivery_address_line1: Option<String>,
    pub delivery_address_line2: Option<String>,
    pub delivery_city: Option<String>,
    pub delivery_state: Option<String>,
    pub delivery_postal_code: Option<String>,
    pub delivery_country: Option<String>,
    pub is_customer: Option<bool>,
    pub is_employee: Option<bool>,
    pub is_supplier: Option<bool>,
}

#[derive(Debug, Deserialize, Serialize)]
pub struct UpdateContactRequest {
    pub first_name: Option<String>,
    pub last_name: Option<String>,
    pub email: Option<String>,
    pub phone: Option<String>,
    pub mobile: Option<String>,
    pub company: Option<String>,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub postal_code: Option<String>,
    pub country: Option<String>,
    pub billing_address_line1: Option<String>,
    pub billing_address_line2: Option<String>,
    pub billing_city: Option<String>,
    pub billing_state: Option<String>,
    pub billing_postal_code: Option<String>,
    pub billing_country: Option<String>,
    pub delivery_address_line1: Option<String>,
    pub delivery_address_line2: Option<String>,
    pub delivery_city: Option<String>,
    pub delivery_state: Option<String>,
    pub delivery_postal_code: Option<String>,
    pub delivery_country: Option<String>,
    pub is_customer: Option<bool>,
    pub is_employee: Option<bool>,
    pub is_supplier: Option<bool>,
    pub is_active: Option<bool>,
}

#[derive(Debug, Serialize)]
pub struct ContactResponse {
    pub id: Uuid,
    pub first_name: String,
    pub last_name: String,
    pub full_name: String,
    pub email: Option<String>,
    pub phone: Option<String>,
    pub mobile: Option<String>,
    pub company: Option<String>,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub city: Option<String>,
    pub state: Option<String>,
    pub postal_code: Option<String>,
    pub country: Option<String>,
    pub billing_address_line1: Option<String>,
    pub billing_address_line2: Option<String>,
    pub billing_city: Option<String>,
    pub billing_state: Option<String>,
    pub billing_postal_code: Option<String>,
    pub billing_country: Option<String>,
    pub delivery_address_line1: Option<String>,
    pub delivery_address_line2: Option<String>,
    pub delivery_city: Option<String>,
    pub delivery_state: Option<String>,
    pub delivery_postal_code: Option<String>,
    pub delivery_country: Option<String>,
    pub is_customer: bool,
    pub is_employee: bool,
    pub is_supplier: bool,
    pub is_active: bool,
    pub created_at: DateTime<Utc>,
    pub created_by: Uuid,
    pub updated_at: DateTime<Utc>,
    pub updated_by: Uuid,
}

impl From<Contact> for ContactResponse {
    fn from(contact: Contact) -> Self {
        Self {
            id: contact.id,
            first_name: contact.first_name.clone(),
            last_name: contact.last_name.clone(),
            full_name: format!("{} {}", contact.first_name, contact.last_name),
            email: contact.email,
            phone: contact.phone,
            mobile: contact.mobile,
            company: contact.company,
            address_line1: contact.address_line1,
            address_line2: contact.address_line2,
            city: contact.city,
            state: contact.state,
            postal_code: contact.postal_code,
            country: contact.country,
            billing_address_line1: contact.billing_address_line1,
            billing_address_line2: contact.billing_address_line2,
            billing_city: contact.billing_city,
            billing_state: contact.billing_state,
            billing_postal_code: contact.billing_postal_code,
            billing_country: contact.billing_country,
            delivery_address_line1: contact.delivery_address_line1,
            delivery_address_line2: contact.delivery_address_line2,
            delivery_city: contact.delivery_city,
            delivery_state: contact.delivery_state,
            delivery_postal_code: contact.delivery_postal_code,
            delivery_country: contact.delivery_country,
            is_customer: contact.is_customer,
            is_employee: contact.is_employee,
            is_supplier: contact.is_supplier,
            is_active: contact.is_active,
            created_at: contact.created_at,
            created_by: contact.created_by,
            updated_at: contact.updated_at,
            updated_by: contact.updated_by,
        }
    }
}
